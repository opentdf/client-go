# This dockerfile is just like `Dockerfile.example`, except it allows for easily building against an upstream
# Git branch of `client-cpp`, rather than a published Conan release, which is handy for development.
FROM python:3.9-bullseye AS builder
# This can be a branchref OR a tagref

ARG VCONAN_VER=1.59.0
ARG VCONAN_BRANCH_VERSION="True"
ARG VCONAN_RECIPE_VER="main"
ARG VCONAN_CPP_VER=1.5.0

WORKDIR /build 

RUN apt-get update && apt-get install -y cmake
RUN pip install conan==${VCONAN_VER}

RUN git clone -b ${VCONAN_RECIPE_VER} 'https://github.com/opentdf/client-conan.git'

WORKDIR client-conan

#RUN conan create recipe/all opentdf-client/${VCLIENT_CPP_VER}@ -pr:b=default --build=opentdf-client --build=missing -o opentdf-client:branch_version=${VCONAN_BRANCH_VERSION}
RUN conan create recipe/all opentdf-client/1.5.0@ -pr:b=default --build=opentdf-client --build=missing -o opentdf-client:branch_version=True

FROM golang:1.19-bullseye

WORKDIR /build

#COPY --chown=0:0 --from=builder /build/conan-output/opentdf-client/lib /build/tdf-client/lib
#COPY --chown=0:0 --from=builder /build/conan-output/opentdf-client/include /build/tdf-client/include
COPY --chown=0:0 --from=builder /root/.conan/data/opentdf-client/1.5.0/_/_/package/*/lib /build/tdf-client/lib
COPY --chown=0:0 --from=builder /root/.conan/data/opentdf-client/1.5.0/_/_/package/*/include /build/tdf-client/include

ENV GO111MODULE=on \
    CGO_ENABLED=1 \
    GOOS=linux \
    CGO_LDFLAGS="-L/build/tdf-client/lib" \
    CGO_CFLAGS="-I/build/tdf-client/include"

WORKDIR /build

COPY . .

# Let's create a /dist folder containing just the files necessary for runtime.
# Later, it will be copied as the / (root) of the output image.
RUN mkdir /dist

#Build the demo executable - can be skipped if not needed
RUN go build  -o /dist/wrappertest ./cmd/wrappertest

# Build the library - Library consumers will build this library implicitly as part of
# `go get -u github.com/opentdf/client-go` (assuming CGO_CFLAGS and CGO_LDFLAGS point at the C++ resources in that environment)
# but doing it explicitly here as well for the sake of example
RUN go build -o /dist/client-go
